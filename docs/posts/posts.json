[
  {
    "path": "posts/2021-07-08-nmeros-aleatorios/",
    "title": "Números aleatorios",
    "description": "Generación de números aleatorios",
    "author": [
      {
        "name": "Tex",
        "url": {}
      }
    ],
    "date": "2021-07-05",
    "categories": [],
    "contents": "\nUna de las funciones posibles en R es la generación de números aleatorios, los resultados pueden concatenarse y almacenarse en forma de vector.\nNúmeros aleatorios enteros\nEl comando sample nos permite seleccionar/generar números aleatorios enteros.\n\n\naleatorios <- sample(25:40, 25, replace = T)\n\n\n\nEl primer argumento es un vector de números válidos a partir de los cuáles se generarán los valores aleatorios, en este caso van de 25 a 40. El segundo argumento indica el número de valores aleatorios a generar, que para este ejemplo serán 25 números aleatorios. El tercer argumento replace = T indica que cada valor aleatorio puede tener duplicados. Finalmente el resultado es guardado en el objeto de nombre aleatorios.\nRevisamos el resultado\n\n\naleatorios\n\n\n [1] 40 38 38 39 37 27 25 32 40 38 29 40 33 32 31 38 31 30 29 32 39 32\n[23] 38 29 32\n\nGeneración aleatoria de valores de tipo carácter\nTambién es posible seleccionar y/o generar valores aleatorios de tipo carácter, para ello necesitamos en el primer argumento un vector con datos válidos a seleccionar, como segundo argumento el total de valores a generar y definir si se permiten duplicados.\n\n\naleat_txt <- sample(c(\"pera\", \"manzana\", \"guayaba\", \"papaya\", \"mango\"), 25, replace = TRUE)\naleat_txt\n\n\n [1] \"pera\"    \"guayaba\" \"manzana\" \"pera\"    \"pera\"    \"guayaba\"\n [7] \"mango\"   \"pera\"    \"guayaba\" \"guayaba\" \"pera\"    \"manzana\"\n[13] \"manzana\" \"guayaba\" \"guayaba\" \"guayaba\" \"mango\"   \"pera\"   \n[19] \"manzana\" \"pera\"    \"pera\"    \"manzana\" \"pera\"    \"guayaba\"\n[25] \"guayaba\"\n\nNúmeros aleatorios con decimales\nEl comando runif nos permite generar números aleatorios a partir de la distribución uniforme. Aquí un ejemplo para generar 25 números aleatorios entre 12.7 y 24.6\n\n\naleat_unif <- runif(25, 12.7, 24.6)\naleat_unif\n\n\n [1] 14.75986 16.03638 13.87572 17.46015 14.12836 21.84241 12.98478\n [8] 17.68866 15.35246 17.86205 18.19395 22.37742 17.40034 15.06586\n[15] 22.56367 15.73015 16.93628 19.64093 12.90821 17.09079 24.05965\n[22] 16.30991 21.46198 21.85187 17.22264\n\nPara redondear los resultados debemos agregar el comando round y especificar el redondeo a 1 dígito\n\n\naleat_unif <- round(runif(25, 12.7, 24.6), 1)\naleat_unif\n\n\n [1] 23.5 21.3 15.2 16.9 20.8 21.4 15.4 18.3 22.5 20.7 18.3 19.9 21.8\n[14] 19.2 14.5 13.6 17.0 17.7 14.6 15.3 13.0 22.3 24.1 22.3 19.7\n\nEl comando rnorm nos permite generar números aleatorios a partir de la distribución normal. Aquí un ejemplo para generar 25 números aleatorios con media 24.7 y desviación estándar de 4.3\n\n\naleat_rnorm <- rnorm(25, 24.7, 4.3)\naleat_rnorm\n\n\n [1] 23.02697 28.02960 28.20441 22.61868 17.86497 19.59109 27.45181\n [8] 28.66944 20.47103 24.58868 22.33852 19.84454 31.63031 27.53721\n[15] 42.09112 22.31958 21.73012 26.75551 19.89303 22.58814 25.47503\n[22] 27.84191 23.78813 21.08994 31.93298\n\nPara redondear podemos utilizar nuevamente el comando round\n\n\naleat_rnorm <- round(rnorm(25, 24.7, 4.3), 1)\naleat_rnorm\n\n\n [1] 21.8 28.4 21.1 25.9 26.5 26.0 15.8 25.3 26.4 27.3 23.7 21.9 28.7\n[14] 21.8 21.1 24.5 27.2 28.6 21.7 22.8 29.8 26.8 24.5 25.6 26.7\n\n\n\n\n",
    "preview": {},
    "last_modified": "2021-07-08T15:42:10-05:00",
    "input_file": {}
  }
]
